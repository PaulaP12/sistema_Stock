{"remainingRequest":"/var/www/html/sistema_stock/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/sistema_stock/src/mixins/ApiRest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/sistema_stock/src/mixins/ApiRest.vue","mtime":1624758148320},{"path":"/var/www/html/sistema_stock/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/sistema_stock/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBtZXRob2RzOiB7CiAgICBnZXRJbmZvKHBhcmFtKSB7CiAgICAgIHZhciBVcmxiYXNlID0gImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvIiArIHBhcmFtOwogICAgICByZXR1cm4gZmV0Y2goVXJsYmFzZSwgewogICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICB9LAogICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgbGV0IHJlc3BvbnNlID0gcmVzOwogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coImVycm9yIGZldGNoIiwgZXJyb3IpKTsKICAgIH0sCiAgICBhZGRFbGVtZW50KHBhcmFtLGJvZHlFbGVtZW50KXsKICAgICAgbGV0IFVybGJhc2UgPSAiaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS8iICsgcGFyYW07CiAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGJvZHlFbGVtZW50KSkKICAgICAgcmV0dXJuIGZldGNoKFVybGJhc2UsIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keUVsZW1lbnQpCiAgICAgIH0pCiAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKQogICAgICAudGhlbihyZXMgPT4gewogICAgICAgIGxldCByZXNwb25zZSA9IHJlczsKICAgICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICAgIH0pCiAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZygiZXJyb3IgZmV0Y2giLCBlcnJvcikpOwogICAgfSwKICAgIGRlbGV0ZUVsZW1lbnQocGFyYW0saWQpewogICAgICB2YXIgVXJsYmFzZSA9ICJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpLyIgKyBwYXJhbSArICcvJyArIGlkOwogICAgICByZXR1cm4gZmV0Y2goVXJsYmFzZSwgewogICAgICAgIG1ldGhvZDogIkRFTEVURSIsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICB9LAogICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgbGV0IHJlc3BvbnNlID0gcmVzOwogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coImVycm9yIGZldGNoIiwgZXJyb3IpKTsKICAgIH0sCiAgICBlZGl0RWxlbWVudChwYXJhbSxpZCxkYXRhKXsKICAgICAgdmFyIFVybGJhc2UgPSAiaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS8iICsgcGFyYW0gKyAnLycgKyBpZDsKICAgICAgcmV0dXJuIGZldGNoKFVybGJhc2UsIHsKICAgICAgICBtZXRob2Q6ICJQVVQiLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgbGV0IHJlc3BvbnNlID0gcmVzOwogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coImVycm9yIGZldGNoIiwgZXJyb3IpKTsKICAgIH0sCiAgICBnZXRFbGVtZW50QnlJZChwYXJhbSxpZCl7CiAgICAgIHZhciBVcmxiYXNlID0gImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvIiArIHBhcmFtICsgJy8nICsgaWQ7CiAgICAgIHJldHVybiBmZXRjaChVcmxiYXNlLCB7CiAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgIH0sCiAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICBsZXQgcmVzcG9uc2UgPSByZXM7CiAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiBjb25zb2xlLmxvZygiZXJyb3IgZmV0Y2giLCBlcnJvcikpOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["ApiRest.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ApiRest.vue","sourceRoot":"src/mixins","sourcesContent":["<script>\nexport default {\n  methods: {\n    getInfo(param) {\n      var Urlbase = \"http://127.0.0.1:8000/api/\" + param;\n      return fetch(Urlbase, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          let response = res;\n          return response;\n        })\n        .catch((error) => console.log(\"error fetch\", error));\n    },\n    addElement(param,bodyElement){\n      let Urlbase = \"http://127.0.0.1:8000/api/\" + param;\n      console.log(JSON.stringify(bodyElement))\n      return fetch(Urlbase, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(bodyElement)\n      })\n      .then(res => res.json())\n      .then(res => {\n        let response = res;\n        return response;\n      })\n      .catch(error => console.log(\"error fetch\", error));\n    },\n    deleteElement(param,id){\n      var Urlbase = \"http://127.0.0.1:8000/api/\" + param + '/' + id;\n      return fetch(Urlbase, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          let response = res;\n          return response;\n        })\n        .catch((error) => console.log(\"error fetch\", error));\n    },\n    editElement(param,id,data){\n      var Urlbase = \"http://127.0.0.1:8000/api/\" + param + '/' + id;\n      return fetch(Urlbase, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data)\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          let response = res;\n          return response;\n        })\n        .catch((error) => console.log(\"error fetch\", error));\n    },\n    getElementById(param,id){\n      var Urlbase = \"http://127.0.0.1:8000/api/\" + param + '/' + id;\n      return fetch(Urlbase, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          let response = res;\n          return response;\n        })\n        .catch((error) => console.log(\"error fetch\", error));\n    }\n  },\n};\n</script>\n"]}]}